package com.company;

import com.company.arkia.Boing747;
import com.company.hardware.Engine;

import java.lang.module.FindException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import java.util.Scanner;

public class Main {


    private static void startMusicShow(Player player){
        player.play();
        if (player instanceof PianoPlayer){
            System.out.println("piano player");
            PianoPlayer pianoPlayer = (PianoPlayer)player;
            pianoPlayer.playJazz();
        }

        else System.out.println("guitar player");
        GuitarPlayer guitarPlayer = (GuitarPlayer)player;
        guitarPlayer.rockNroll();


    }
    private static void repairDevice(ElectricDevice device){
        if ( device.worksOnBatteries = true){
            device.insertNewBatteries();
        }
        if (device.isFaulty = false){
            return;
        }
        device.fixDevice();
        if (device instanceof Television){
            System.out.println(((Television) device).screenSize);
        }
        if (device instanceof Cellphone){
            System.out.println(((Cellphone) device).brand);
        }
        System.out.println("fixing is done");

    }
    public static void IdentifyTeacher(Teacher type){
       if (type instanceof MathTeacher){
           System.out.println(" is a math teacher");
           MathTeacher mt = (MathTeacher)type;
           System.out.println(mt.math_skills);
       }
       if (type instanceof HistoryTeacher){
           System.out.println(" is a history teacher");
           HistoryTeacher ht = (HistoryTeacher)type;
           System.out.println(ht.field_of_profession);
       }
       else {
           System.out.println("unknown");
       }
    }



    public static void main(String[] args) {

        LocalDateTime myBday = LocalDateTime.of(1992, 8, 6, 1, 1);

        System.out.println(myBday);

        ArrayList<Continent>continents = new ArrayList<>();
        continents.add(new Continent("asia", 200, 500));
        continents.add(new Continent("north america", 150, 200));
        continents.add(new Continent("europe", 100, 300));
        Collections.sort(continents);
        for (int i = 0; i < continents.size(); i++) {
            System.out.println(continents.get(i));
        }
            System.out.println("-----------------------");

            Collections.sort(continents, new ContinentCompareBySize());
            for (int i1 = 0; i1 < continents.size(); i1++){
                System.out.println(continents.get(i1));
            }
            System.out.println("sorting by population");
            Collections.sort(continents, new ContinentCompareByPop());
            for (int n = 0; n < continents.size(); n++){
                System.out.println(continents.get(n));
            }
        }
    }
















































